/** @file
 *
 *  Debug Port Table (DBG2)
 *
 *  Copyright (c) 2024, Phan Ba Gia Bao <phanbagiabao2001@gmail.com>
 *  Copyright (c) 2012-2021, ARM Limited. All rights reserved.
 *  SPDX-License-Identifier: BSD-2-Clause-Patent
 *
 **/

#include <IndustryStandard/Acpi.h>
#include <IndustryStandard/DebugPort2Table.h>
#include <Library/AcpiLib.h>
#include <Library/PcdLib.h>

#include "AcpiTables.h"

#define DBG2_NUM_DEBUG_PORTS                          1
#define DBG2_NUMBER_OF_GENERIC_ADDRESS_REGISTERS      1
#define DBG2_NAMESPACESTRING_FIELD_SIZE               15
#define UART_STR                                      { '\\', '_', 'S', 'B', '.', 'S', 'O', 'C', 'B', '.', 'U', 'R', 'T', '0', 0x00 }

#pragma pack(1)

typedef struct {
  EFI_ACPI_DBG2_DEBUG_DEVICE_INFORMATION_STRUCT         Dbg2Device;
  EFI_ACPI_6_3_GENERIC_ADDRESS_STRUCTURE                BaseAddressRegister;
  UINT32                                                AddressSize;
  UINT8                                                 NameSpaceString[DBG2_NAMESPACESTRING_FIELD_SIZE];
} DBG2_DEBUG_DEVICE_INFORMATION;

typedef struct {
  EFI_ACPI_DEBUG_PORT_2_DESCRIPTION_TABLE               Description;
  DBG2_DEBUG_DEVICE_INFORMATION                         Dbg2DeviceInfo[DBG2_NUM_DEBUG_PORTS];
} DBG2_TABLE;
#pragma pack()


#define DBG2_DEBUG_PORT_DDI(NumReg, SubType, UartBase, UartAddrLen, UartNameStr) {                                  \
  {                                                                                                                 \
    EFI_ACPI_DBG2_DEBUG_DEVICE_INFORMATION_STRUCT_REVISION,         /* UINT8     Revision */                        \
    sizeof (DBG2_DEBUG_DEVICE_INFORMATION),                         /* UINT16    Length */                          \
    NumReg,                                                         /* UINT8     NumberofGenericAddressRegisters */ \
    DBG2_NAMESPACESTRING_FIELD_SIZE,                                /* UINT16    NameSpaceStringLength */           \
    OFFSET_OF (DBG2_DEBUG_DEVICE_INFORMATION, NameSpaceString),     /* UINT16    NameSpaceStringOffset */           \
    0,                                                              /* UINT16    OemDataLength */                   \
    0,                                                              /* UINT16    OemDataOffset */                   \
    EFI_ACPI_DBG2_PORT_TYPE_SERIAL,                                 /* UINT16    Port Type */                       \
    SubType,                                                        /* UINT16    Port Subtype */                    \
    {EFI_ACPI_RESERVED_BYTE, EFI_ACPI_RESERVED_BYTE},               /* UINT8     Reserved[2] */                     \
    OFFSET_OF (DBG2_DEBUG_DEVICE_INFORMATION, BaseAddressRegister), /* UINT16    BaseAddressRegister Offset */      \
    OFFSET_OF (DBG2_DEBUG_DEVICE_INFORMATION, AddressSize)          /* UINT16    AddressSize Offset */              \
  },                                                                                                                \
  ARM_GAS32 (UartBase),                            /* EFI_ACPI_6_3_GENERIC_ADDRESS_STRUCTURE BaseAddressRegister */ \
  UartAddrLen,                                     /* UINT32  AddressSize */                                        \
  UartNameStr                                      /* UINT8   NameSpaceString[MAX_DBG2_NAME_LEN] */                 \
}

STATIC DBG2_TABLE Dbg2 = {
  {
    ACPI_HEADER (
      EFI_ACPI_6_3_DEBUG_PORT_2_TABLE_SIGNATURE,
      DBG2_TABLE,
      EFI_ACPI_DBG2_DEBUG_DEVICE_INFORMATION_STRUCT_REVISION
    ),
    OFFSET_OF (DBG2_TABLE, Dbg2DeviceInfo),
    DBG2_NUM_DEBUG_PORTS                                          /* UINT32  NumberDbgDeviceInfo */
  },
  {
    /*
     * Kernel Debug Port
     */
    DBG2_DEBUG_PORT_DDI (
      DBG2_NUM_DEBUG_PORTS,
      EFI_ACPI_DBG2_PORT_SUBTYPE_SERIAL_FULL_16550,
      0x400e0000,
      0x400,
      UART_STR
    )
  }
};


//
// Reference the table being generated to prevent the optimizer from removing
// the data structure from the executable
//
VOID* CONST ReferenceAcpiTable = &Dbg2;
